<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="accountDao" class="org.example.ioc.dao.impl.JdbcAccountDaoImpl" scope="prototype"
            init-method="init" destroy-method="destroyed">
        <property ref="connectionUtils" name="ConnectionUtils"></property>
    </bean>

    <bean id="transferService" class="org.example.ioc.service.impl.TransferServiceImpl">
        <property name="AccountDao" ref="accountDao"></property>
    </bean>



    <!--事务管理器-->
    <bean id="transactionManager" class="org.example.ioc.utils.TransactionManager">
        <property name="ConnectionUtils" ref="connectionUtils"></property>
    </bean>

    <!--代理工厂-->
    <bean id="proxyFactory" class="org.example.ioc.factory.ProxyFactory">
        <property name="TransactionManager" ref="transactionManager"></property>
    </bean>

    <!-- Spring ioc实例化Bean的三种方式-->
    <!-- 方法一: 使用无参构造函数(推荐) -->
<!--    <bean id="connectionUtils" class="org.example.ioc.utils.ConnectionUtils"></bean>-->

    <!-- 另外两种方式是为了我们自己new的对象加入到Spring IOC容器里面 ioc实例化Bean的三种方式-->
    <!-- 方法二: 使用静态方法 -->
<!--    <bean id="connectionUtils" class="org.example.ioc.factory.CreateBeanFactory" factory-method="getInstanceStatic"></bean>-->
    <!-- 方法二: 使用实例化方法 -->
    <bean id="createBeanFactory" class="org.example.ioc.factory.CreateBeanFactory"></bean>
    <bean id="connectionUtils" factory-bean="createBeanFactory" factory-method="getInstance"></bean>
</beans>